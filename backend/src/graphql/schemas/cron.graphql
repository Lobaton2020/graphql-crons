scalar Date
type Query {
  crons(limit: Int!): [Cron!]!
  cron(id: ID!): Cron
  projects: [Project!]!
}

type Mutation {
  createCron(cron: NewCronInput): String
  editCron(id: ID!, cron: EditCronInput!): Cron
  editTask(id: ID!, task: EditTaskInput!): String
  removeCron(id: ID!): String
  removeTask(id: ID!): String
  copyCron(id: ID!): String
  createTask(cronograma_id: String!, task: EditTaskInput!): String!
  moveTask(source_cronogram_id: ID!, destine_cronogram_id: ID!, task_id: ID!): String
}
type Cron {
  id: ID!
  name: String!
  date: Date!
  tasks: [Task]
}

type Task {
  id: ID
  description: String
  state: Boolean
  hour: Int
  minute: Int
  project: Project
}

type Project {
  id: ID!
  name: String!
}

input NewCronInput {
  name: String!
  date: String!
}
input EditCronInput {
  name: String!
  date: String!
}
input EditProject {
  id: ID!
  name: String
}
input EditTaskInput {
  description: String
  state: Boolean
  hour: Int
  minute: Int
  project: EditProject
}
